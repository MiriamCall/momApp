---
import Timer from '../components/Timer.astro';
---

<!DOCTYPE html>
<link rel="stylesheet" href="/src/styles/global.css">
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mama's Timer</title>
    <link rel="stylesheet" href="/global.css" />
</head>
<body class="font-sans antialiased bg-gradient-to-br from-teal-50 to-blue-50 text-gray-800 min-h-screen flex items-center justify-center p-4">

    <main class="flex flex-col items-center justify-center p-8">
        <h1 class="text-4xl font-extrabold text-center text-blue-700 mb-8 sm:text-5xl">Baby Timer</h1>

        <div class="relative w-80 h-80 sm:w-96 sm:h-96 rounded-full bg-white shadow-xl flex items-center justify-center border-4 border-blue-200">

            <div class="absolute text-xl font-bold text-gray-600 top-4 left-1/2 -translate-x-1/2">12</div>
            <div class="absolute text-xl font-bold text-gray-600 top-1/2 right-4 -translate-y-1/2">3</div>
            <div class="absolute text-xl font-bold text-gray-600 bottom-4 left-1/2 -translate-x-1/2">6</div>
            <div class="absolute text-xl font-bold text-gray-600 top-1/2 left-4 -translate-y-1/2">9</div>

            <div id="hour-hand"
                class="absolute bg-blue-700 rounded-full origin-bottom w-2 h-20
                    left-1/2 -ml-1 transform rotate-[0deg] transition-transform duration-1000 ease-linear">
            </div>
            <div id="minute-hand"
                class="absolute bg-blue-500 rounded-full origin-bottom w-1.5 h-28
                    left-1/2 -ml-[0.375rem] transform rotate-[0deg] transition-transform duration-1000 ease-linear">
            </div>
            <div id="second-hand"
                class="absolute bg-pink-500 rounded-full origin-bottom w-1 h-32
                left-1/2 -ml-0.5 transform rotate-[0deg] transition-transform duration-1000 ease-linear">
            </div>

            <div class="absolute w-4 h-4 rounded-full bg-blue-900 z-10"></div>
        </div>

        <div id="digital-display" class="mt-8 text-6xl font-mono text-blue-800 tracking-wider">00:00:00</div>

        <div class="flex flex-wrap justify-center gap-4 mt-8">
            <button id="start-button" class="bg-green-500 hover:bg-green-600 text-white font-bold py-3 px-6 rounded-full shadow-lg transition-all duration-300 transform hover:-translate-y-1">Start</button>
            <button id="pause-button" class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-3 px-6 rounded-full shadow-lg transition-all duration-300 transform hover:-translate-y-1">Pause</button>
            <button id="reset-button" class="bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-6 rounded-full shadow-lg transition-all duration-300 transform hover:-translate-y-1">Reset</button>
        </div>

    </main>

    <script is:inline>
        // JavaScript for the Timer Logic and Clock Hands
        const hourHand = document.getElementById('hour-hand');
        const minuteHand = document.getElementById('minute-hand');
        const secondHand = document.getElementById('second-hand');
        const digitalDisplay = document.getElementById('digital-display');
        const startButton = document.getElementById('start-button');
        const pauseButton = document.getElementById('pause-button');
        const resetButton = document.getElementById('reset-button');

        let timerInterval;
        let totalSeconds = 0; // For countdown or stopwatch

        // Function to update the clock hands (analog part)
        function updateClockHands() {
            const now = new Date(); // Get current time
            const hours = now.getHours();
            const minutes = now.getMinutes();
            const seconds = now.getSeconds();

            // Calculate degrees for each hand
            // 360 degrees / 12 hours = 30 degrees per hour
            // Plus minute contribution for smooth hour hand movement
            const hourDegrees = ((hours % 12) + minutes / 60) * 30;
            // 360 degrees / 60 minutes = 6 degrees per minute
            // Plus second contribution for smooth minute hand movement
            const minuteDegrees = (minutes + seconds / 60) * 6;
            // 360 degrees / 60 seconds = 6 degrees per second
            const secondDegrees = seconds * 6;

            hourHand.style.transform = `rotate(${hourDegrees}deg)`;
            minuteHand.style.transform = `rotate(${minuteDegrees}deg)`;
            secondHand.style.transform = `rotate(${secondDegrees}deg)`;
        }

        // Function to update the digital display (stopwatch/countdown part)
        function updateDigitalDisplay() {
            // For a stopwatch:
            const h = String(Math.floor(totalSeconds / 3600)).padStart(2, '0');
            const m = String(Math.floor((totalSeconds % 3600) / 60)).padStart(2, '0');
            const s = String(totalSeconds % 60).padStart(2, '0');
            digitalDisplay.textContent = `${h}:${m}:${s}`;

            // If you want a countdown, you'd decrement totalSeconds and stop at 0
            // if (totalSeconds <= 0) {
            //     clearInterval(timerInterval);
            //     alert("Time's up, Mama!");
            //     resetTimer();
            //     return;
            // }
            // totalSeconds--; // for countdown
        }

        // Combined update function for both clock and digital display
        function updateTimer() {
            updateClockHands(); // Keep analog clock in sync with real time
            updateDigitalDisplay(); // Update digital stopwatch/countdown
            totalSeconds++; // Increment for stopwatch
            // totalSeconds--; // Decrement for countdown
        }

        function startTimer() {
            if (!timerInterval) { // Prevent multiple intervals
                timerInterval = setInterval(updateTimer, 1000);
            }
        }

        function pauseTimer() {
            clearInterval(timerInterval);
            timerInterval = null; // Clear the interval ID
        }

        function resetTimer() {
            pauseTimer();
            totalSeconds = 0; // Reset for stopwatch
            // totalSeconds = initialCountdownTime; // Reset for countdown
            updateDigitalDisplay(); // Update display to 00:00:00
            // Reset analog hands to 12:00:00 if you want, or let them snap to current time
            // For simplicity, I'm letting them snap to current time as `updateClockHands` is called on reset too.
        }

        // Event Listeners for buttons
        startButton.addEventListener('click', startTimer);
        pauseButton.addEventListener('click', pauseTimer);
        resetButton.addEventListener('click', resetTimer);

        // Initial update to show current time when page loads
        updateTimer();
    </script>
</body>
</html>